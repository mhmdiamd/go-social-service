version: "3.8"

networks:
  base:
    driver: bridge
  monitoring:
    driver: bridge
  broker:
    driver: bridge
services:
  golang-server:
    build: .
    ports:
      - 4000:4000
    depends_on:
      - db
      - kafka
    networks:
      - base

  # Running local
  # docker exec -it go-social-service psql -U postgres
  db:
    image: postgres:alpine3.20
    environment:
      POSTGRES_USER: postgres # Overriding the default user
      POSTGRES_PASSWORD: password # Overriding the default password
      POSTGRES_DB: db_social_service # Overriding the default database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - base

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - broker

  kafka:
    image: "bitnami/kafka:3.3.2"
    ports:
      - "9092:9092"
    networks:
      - base
      - broker
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ZOOKEEPER_METADATA_MIGRATION_ENABLE=true
    volumes:
      - "kafka_data:/bitnami"
    depends_on:
      - zookeeper

  grafana:
    container_name: go-social-service-grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - ~/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    ports:
      - 3000:3000
    networks:
      - monitoring
      - base
    depends_on:
      - prometheus

  prometheus:
    container_name: go-social-service-prometheus
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./external/monitoring/prometheus:/etc/prometheus
      - go_social_service_prometheus_data:/prometheus
    networks:
      - monitoring
      - base
    command:
      - "--config.file=/etc/prometheus/prometheus/prometheus.yml"
    depends_on:
      - golang-server

volumes:
  postgres_data:
  zookeeper_data:
  kafka_data:
  go_social_service_prometheus_data:
